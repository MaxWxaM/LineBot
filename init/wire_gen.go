// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/MaxWxaM/linebot/internal/app"
	"github.com/MaxWxaM/linebot/internal/app/config"
	"github.com/MaxWxaM/linebot/internal/app/http/controller"
	"github.com/MaxWxaM/linebot/internal/app/http/route"
	"github.com/MaxWxaM/linebot/internal/app/repo"
	"github.com/MaxWxaM/linebot/internal/app/service"
	"github.com/google/wire"
)

// Injectors from wire.go:

func InitApp() (*app.Server, func(), error) {
	httpConfig := config.NewHttpOptions()
	clientConfig, err := config.NewMongoClientConfig()
	if err != nil {
		return nil, nil, err
	}
	client, cleanup, err := config.NewMongoClient(clientConfig)
	if err != nil {
		return nil, nil, err
	}
	iMsgRepository := repo.NewMongoMsgRepo(client)
	lintBotClientConfig, err := config.NewLineBotClientConfig()
	if err != nil {
		cleanup()
		return nil, nil, err
	}
	customizeLineBotClient, err := config.NewLineBotClient(lintBotClientConfig)
	if err != nil {
		cleanup()
		return nil, nil, err
	}
	iMsgService := service.NewMsgService(iMsgRepository, customizeLineBotClient)
	msgController := controller.NewMsgController(iMsgService)
	engine := route.NewRoute(msgController)
	server := app.NewServer(httpConfig, engine)
	return server, func() {
		cleanup()
	}, nil
}

// wire.go:

var (
	controllerProviderSet = wire.NewSet(controller.NewMsgController)
	serviceProviderSet    = wire.NewSet(service.NewMsgService)

	repositoryProviderSet = wire.NewSet(repo.NewMongoMsgRepo)

	linebotProviderSet = wire.NewSet(config.NewLineBotClientConfig, config.NewLineBotClient)
	mongoProviderSet   = wire.NewSet(config.NewMongoClientConfig, config.NewMongoClient)
	routeProviderSet   = wire.NewSet(route.NewRoute)
	serverProviderSet  = wire.NewSet(config.NewHttpOptions, app.NewServer)
)

var providerSet = wire.NewSet(
	controllerProviderSet,
	routeProviderSet,
	linebotProviderSet,
	serviceProviderSet,
	repositoryProviderSet,
	mongoProviderSet,
	serverProviderSet,
)
